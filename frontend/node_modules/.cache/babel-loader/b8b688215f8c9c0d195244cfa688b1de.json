{"ast":null,"code":"import { GET_POSTS, GET_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, ADD_COMMENT, REMOVE_COMMENT } from \"../actions/types\";\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, actions) {\n  const {\n    type,\n    payload\n  } = actions;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: [...state.posts.filter(post => post.id !== payload.id), payload],\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: [...state.posts.filter(post => post.id !== payload)],\n        loading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          post_comments: [payload, ...state.post.post_comments]\n        },\n        loading: false\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          post_comments: state.post.post_comments.filter(comment => comment.id !== payload)\n        },\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/illus/WebstormProjects/ItsAmazingNetwork/frontend/src/reducers/post.js"],"names":["GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","state","actions","type","payload","filter","id","post_comments","comment"],"mappings":"AAAA,SACEA,SADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,QANF,EAOEC,WAPF,EAQEC,cARF,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,OAA/B,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,OAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKf,SAAL;AACE,aAAO,EAAE,GAAGa,KAAL;AAAYJ,QAAAA,KAAK,EAAEO,OAAnB;AAA4BL,QAAAA,OAAO,EAAE;AAArC,OAAP;;AACF,SAAKV,QAAL;AACE,aAAO,EAAE,GAAGY,KAAL;AAAYH,QAAAA,IAAI,EAAEM,OAAlB;AAA2BL,QAAAA,OAAO,EAAE;AAApC,OAAP;;AACF,SAAKN,QAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYJ,QAAAA,KAAK,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,KAAnB,CAAnB;AAA8CE,QAAAA,OAAO,EAAE;AAAvD,OAAP;;AACF,SAAKT,UAAL;AACE,aAAO,EAAE,GAAGW,KAAL;AAAYD,QAAAA,KAAK,EAAEI,OAAnB;AAA4BL,QAAAA,OAAO,EAAE;AAArC,OAAP;;AACF,SAAKR,YAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACQ,EAAL,KAAYF,OAAO,CAACE,EAA/C,CAAJ,EAAwDF,OAAxD,CAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACQ,EAAL,KAAYF,OAAvC,CAAJ,CAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,IAAI,EAAE,EACJ,GAAGG,KAAK,CAACH,IADL;AAEJS,UAAAA,aAAa,EAAE,CAACH,OAAD,EAAU,GAAGH,KAAK,CAACH,IAAN,CAAWS,aAAxB;AAFX,SAFD;AAMLR,QAAAA,OAAO,EAAE;AANJ,OAAP;;AAQF,SAAKJ,cAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,IAAI,EAAE,EACJ,GAAGG,KAAK,CAACH,IADL;AAEJS,UAAAA,aAAa,EAAEN,KAAK,CAACH,IAAN,CAAWS,aAAX,CAAyBF,MAAzB,CACbG,OAAO,IAAIA,OAAO,CAACF,EAAR,KAAeF,OADb;AAFX,SAFD;AAQLL,QAAAA,OAAO,EAAE;AARJ,OAAP;;AAUF;AACE,aAAOE,KAAP;AA1CJ;AA4CD","sourcesContent":["import {\r\n  GET_POSTS,\r\n  GET_POST,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function(state = initialState, actions) {\r\n  const { type, payload } = actions;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return { ...state, posts: payload, loading: false };\r\n    case GET_POST:\r\n      return { ...state, post: payload, loading: false };\r\n    case ADD_POST:\r\n      return { ...state, posts: [payload, ...state.posts], loading: false };\r\n    case POST_ERROR:\r\n      return { ...state, error: payload, loading: false };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts.filter(post => post.id !== payload.id), payload],\r\n        loading: false\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts.filter(post => post.id !== payload)],\r\n        loading: false\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          post_comments: [payload, ...state.post.post_comments]\r\n        },\r\n        loading: false\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          post_comments: state.post.post_comments.filter(\r\n            comment => comment.id !== payload\r\n          )\r\n        },\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}