{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\illus\\\\WebstormProjects\\\\ItsAmazingNetwork\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\illus\\\\WebstormProjects\\\\ItsAmazingNetwork\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{GET_POSTS,GET_POST,POST_ERROR,UPDATE_LIKES,DELETE_POST,ADD_POST,ADD_COMMENT,REMOVE_COMMENT}from\"../actions/types\";var initialState={posts:[],post:null,loading:true,error:{}};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var actions=arguments.length>1?arguments[1]:undefined;var type=actions.type,payload=actions.payload;switch(type){case GET_POSTS:return _objectSpread({},state,{posts:payload,loading:false});case GET_POST:return _objectSpread({},state,{post:payload,loading:false});case ADD_POST:return _objectSpread({},state,{posts:[payload].concat(_toConsumableArray(state.posts)),loading:false});case POST_ERROR:return _objectSpread({},state,{error:payload,loading:false});case UPDATE_LIKES:return _objectSpread({},state,{posts:[].concat(_toConsumableArray(state.posts.filter(function(post){return post.id!==payload.id;})),[payload]),loading:false});case DELETE_POST:return _objectSpread({},state,{posts:_toConsumableArray(state.posts.filter(function(post){return post.id!==payload;})),loading:false});case ADD_COMMENT:return _objectSpread({},state,{post:_objectSpread({},state.post,{post_comments:[payload].concat(_toConsumableArray(state.post.post_comments))}),loading:false});case REMOVE_COMMENT:return _objectSpread({},state,{post:_objectSpread({},state.post,{post_comments:state.post.post_comments.filter(function(comment){return comment.id!==payload;})}),loading:false});default:return state;}}","map":{"version":3,"sources":["C:/Users/illus/WebstormProjects/ItsAmazingNetwork/frontend/src/reducers/post.js"],"names":["GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","state","actions","type","payload","filter","id","post_comments","comment"],"mappings":"6XAAA,OACEA,SADF,CAEEC,QAFF,CAGEC,UAHF,CAIEC,YAJF,CAKEC,WALF,CAMEC,QANF,CAOEC,WAPF,CAQEC,cARF,KASO,kBATP,CAWA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,EADY,CAEnBC,IAAI,CAAE,IAFa,CAGnBC,OAAO,CAAE,IAHU,CAInBC,KAAK,CAAE,EAJY,CAArB,CAOA,cAAe,WAAwC,IAA/BC,CAAAA,KAA+B,2DAAvBL,YAAuB,IAATM,CAAAA,OAAS,8CAC7CC,CAAAA,IAD6C,CAC3BD,OAD2B,CAC7CC,IAD6C,CACvCC,OADuC,CAC3BF,OAD2B,CACvCE,OADuC,CAGrD,OAAQD,IAAR,EACE,IAAKf,CAAAA,SAAL,CACE,wBAAYa,KAAZ,EAAmBJ,KAAK,CAAEO,OAA1B,CAAmCL,OAAO,CAAE,KAA5C,GACF,IAAKV,CAAAA,QAAL,CACE,wBAAYY,KAAZ,EAAmBH,IAAI,CAAEM,OAAzB,CAAkCL,OAAO,CAAE,KAA3C,GACF,IAAKN,CAAAA,QAAL,CACE,wBAAYQ,KAAZ,EAAmBJ,KAAK,EAAGO,OAAH,4BAAeH,KAAK,CAACJ,KAArB,EAAxB,CAAqDE,OAAO,CAAE,KAA9D,GACF,IAAKT,CAAAA,UAAL,CACE,wBAAYW,KAAZ,EAAmBD,KAAK,CAAEI,OAA1B,CAAmCL,OAAO,CAAE,KAA5C,GACF,IAAKR,CAAAA,YAAL,CACE,wBACKU,KADL,EAEEJ,KAAK,8BAAMI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmB,SAAAP,IAAI,QAAIA,CAAAA,IAAI,CAACQ,EAAL,GAAYF,OAAO,CAACE,EAAxB,EAAvB,CAAN,GAA0DF,OAA1D,EAFP,CAGEL,OAAO,CAAE,KAHX,GAKF,IAAKP,CAAAA,WAAL,CACE,wBACKS,KADL,EAEEJ,KAAK,oBAAMI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmB,SAAAP,IAAI,QAAIA,CAAAA,IAAI,CAACQ,EAAL,GAAYF,OAAhB,EAAvB,CAAN,CAFP,CAGEL,OAAO,CAAE,KAHX,GAKF,IAAKL,CAAAA,WAAL,CACE,wBACKO,KADL,EAEEH,IAAI,kBACCG,KAAK,CAACH,IADP,EAEFS,aAAa,EAAGH,OAAH,4BAAeH,KAAK,CAACH,IAAN,CAAWS,aAA1B,EAFX,EAFN,CAMER,OAAO,CAAE,KANX,GAQF,IAAKJ,CAAAA,cAAL,CACE,wBACKM,KADL,EAEEH,IAAI,kBACCG,KAAK,CAACH,IADP,EAEFS,aAAa,CAAEN,KAAK,CAACH,IAAN,CAAWS,aAAX,CAAyBF,MAAzB,CACb,SAAAG,OAAO,QAAIA,CAAAA,OAAO,CAACF,EAAR,GAAeF,OAAnB,EADM,CAFb,EAFN,CAQEL,OAAO,CAAE,KARX,GAUF,QACE,MAAOE,CAAAA,KAAP,CA1CJ,CA4CD","sourcesContent":["import {\r\n  GET_POSTS,\r\n  GET_POST,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function(state = initialState, actions) {\r\n  const { type, payload } = actions;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return { ...state, posts: payload, loading: false };\r\n    case GET_POST:\r\n      return { ...state, post: payload, loading: false };\r\n    case ADD_POST:\r\n      return { ...state, posts: [payload, ...state.posts], loading: false };\r\n    case POST_ERROR:\r\n      return { ...state, error: payload, loading: false };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts.filter(post => post.id !== payload.id), payload],\r\n        loading: false\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts.filter(post => post.id !== payload)],\r\n        loading: false\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          post_comments: [payload, ...state.post.post_comments]\r\n        },\r\n        loading: false\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          post_comments: state.post.post_comments.filter(\r\n            comment => comment.id !== payload\r\n          )\r\n        },\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}