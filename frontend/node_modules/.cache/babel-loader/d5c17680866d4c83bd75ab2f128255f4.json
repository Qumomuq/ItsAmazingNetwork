{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"../actions/alert\";\nimport { GET_PROFILE, GET_PROFILES, GET_REPOS, GITHUB_ERROR, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED } from \"./types\"; // Get Current User Profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get All Profiles\n\nexport const getProfiles = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profiles\");\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get Profile by ID\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get Github Repos\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GITHUB_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify(formData);\n    const res = await axios.post(\"/api/profile\", body, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (err) {\n    const errors = err.response.data;\n\n    if (errors[\"status\"]) {\n      errors[\"status\"].forEach(msg => dispatch(setAlert(`Status: ${msg}`, \"danger\")));\n    }\n\n    if (errors[\"skills\"]) {\n      errors[\"skills\"].forEach(msg => dispatch(setAlert(`Skills: ${msg}`, \"danger\")));\n    }\n\n    if (errors[\"bio\"]) {\n      errors[\"bio\"].forEach(msg => dispatch(setAlert(`Bio: ${msg}`, \"danger\")));\n    }\n\n    if (errors[\"website\"]) {\n      errors[\"website\"].forEach(msg => dispatch(setAlert(`Website: ${msg}`, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    if (formData[\"to_date\"] === \"\") {\n      delete formData.to_date;\n    }\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify(formData);\n    const res = await axios.post(\"/api/profile/experience\", body, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data;\n\n    if (errors[\"title\"]) {\n      errors[\"title\"].forEach(msg => dispatch(setAlert(`Title: ${msg}`, \"danger\")));\n    }\n\n    if (errors[\"company\"]) {\n      errors[\"company\"].forEach(msg => dispatch(setAlert(`Company: ${msg}`, \"danger\")));\n    }\n\n    if (errors[\"location\"]) {\n      errors[\"location\"].forEach(msg => dispatch(setAlert(`Location: ${msg}`, \"danger\")));\n    }\n\n    if (errors[\"from_date\"]) {\n      dispatch(setAlert(\"From Date is required\", \"danger\"));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    if (formData[\"to_date\"] === \"\") {\n      delete formData.to_date;\n    }\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify(formData);\n    const res = await axios.post(\"/api/profile/education\", body, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data;\n\n    if (errors[\"school\"]) {\n      errors[\"school\"].forEach(msg => dispatch(setAlert(`School: ${msg}`, \"danger\")));\n    }\n\n    if (errors[\"degree\"]) {\n      errors[\"degree\"].forEach(msg => dispatch(setAlert(`Degree: ${msg}`, \"danger\")));\n    }\n\n    if (errors[\"field_of_study\"]) {\n      errors[\"field_of_study\"].forEach(msg => dispatch(setAlert(`Field of Study: ${msg}`, \"danger\")));\n    }\n\n    if (errors[\"from_date\"]) {\n      dispatch(setAlert(\"From Date is required\", \"danger\"));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Account and profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm(\"Are you sure? This can not be undone!\")) {\n    try {\n      await axios.delete(\"/api/profile\");\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert(\"Your account has been deleted permanently\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/illus/WebstormProjects/ItsAmazingNetwork/frontend/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","GET_PROFILES","GET_REPOS","GITHUB_ERROR","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","getCurrentProfile","dispatch","type","res","get","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getGithubRepos","username","createProfile","formData","history","edit","config","headers","body","JSON","stringify","post","push","errors","forEach","addExperience","to_date","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"../actions/alert\";\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n  GITHUB_ERROR,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED\r\n} from \"./types\";\r\n\r\n// Get Current User Profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  try {\r\n    const res = await axios.get(\"/api/profile/me\");\r\n    dispatch({ type: GET_PROFILE, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get All Profiles\r\nexport const getProfiles = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\"/api/profiles\");\r\n    dispatch({ type: GET_PROFILES, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get Profile by ID\r\nexport const getProfileById = userId => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/${userId}`);\r\n    dispatch({ type: GET_PROFILE, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get Github Repos\r\nexport const getGithubRepos = username => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/github/${username}`);\r\n    dispatch({ type: GET_REPOS, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GITHUB_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile = (\r\n  formData,\r\n  history,\r\n  edit = false\r\n) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    };\r\n\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post(\"/api/profile\", body, config);\r\n\r\n    dispatch({ type: GET_PROFILE, payload: res.data });\r\n\r\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\r\n\r\n    if (!edit) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data;\r\n\r\n    if (errors[\"status\"]) {\r\n      errors[\"status\"].forEach(msg =>\r\n        dispatch(setAlert(`Status: ${msg}`, \"danger\"))\r\n      );\r\n    }\r\n\r\n    if (errors[\"skills\"]) {\r\n      errors[\"skills\"].forEach(msg =>\r\n        dispatch(setAlert(`Skills: ${msg}`, \"danger\"))\r\n      );\r\n    }\r\n\r\n    if (errors[\"bio\"]) {\r\n      errors[\"bio\"].forEach(msg => dispatch(setAlert(`Bio: ${msg}`, \"danger\")));\r\n    }\r\n\r\n    if (errors[\"website\"]) {\r\n      errors[\"website\"].forEach(msg =>\r\n        dispatch(setAlert(`Website: ${msg}`, \"danger\"))\r\n      );\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n  try {\r\n    if (formData[\"to_date\"] === \"\") {\r\n      delete formData.to_date;\r\n    }\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    };\r\n\r\n    const body = JSON.stringify(formData);\r\n    const res = await axios.post(\"/api/profile/experience\", body, config);\r\n\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n    dispatch(setAlert(\"Experience added\", \"success\"));\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data;\r\n\r\n    if (errors[\"title\"]) {\r\n      errors[\"title\"].forEach(msg =>\r\n        dispatch(setAlert(`Title: ${msg}`, \"danger\"))\r\n      );\r\n    }\r\n\r\n    if (errors[\"company\"]) {\r\n      errors[\"company\"].forEach(msg =>\r\n        dispatch(setAlert(`Company: ${msg}`, \"danger\"))\r\n      );\r\n    }\r\n\r\n    if (errors[\"location\"]) {\r\n      errors[\"location\"].forEach(msg =>\r\n        dispatch(setAlert(`Location: ${msg}`, \"danger\"))\r\n      );\r\n    }\r\n\r\n    if (errors[\"from_date\"]) {\r\n      dispatch(setAlert(\"From Date is required\", \"danger\"));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n  try {\r\n    if (formData[\"to_date\"] === \"\") {\r\n      delete formData.to_date;\r\n    }\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    };\r\n\r\n    const body = JSON.stringify(formData);\r\n    const res = await axios.post(\"/api/profile/education\", body, config);\r\n\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n    dispatch(setAlert(\"Education added\", \"success\"));\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data;\r\n\r\n    if (errors[\"school\"]) {\r\n      errors[\"school\"].forEach(msg =>\r\n        dispatch(setAlert(`School: ${msg}`, \"danger\"))\r\n      );\r\n    }\r\n\r\n    if (errors[\"degree\"]) {\r\n      errors[\"degree\"].forEach(msg =>\r\n        dispatch(setAlert(`Degree: ${msg}`, \"danger\"))\r\n      );\r\n    }\r\n\r\n    if (errors[\"field_of_study\"]) {\r\n      errors[\"field_of_study\"].forEach(msg =>\r\n        dispatch(setAlert(`Field of Study: ${msg}`, \"danger\"))\r\n      );\r\n    }\r\n\r\n    if (errors[\"from_date\"]) {\r\n      dispatch(setAlert(\"From Date is required\", \"danger\"));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Experience\r\nexport const deleteExperience = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n\r\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Education\r\nexport const deleteEducation = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n\r\n    dispatch(setAlert(\"Education Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Account and profile\r\nexport const deleteAccount = () => async dispatch => {\r\n  if (window.confirm(\"Are you sure? This can not be undone!\")) {\r\n    try {\r\n      await axios.delete(\"/api/profile\");\r\n\r\n      dispatch({ type: CLEAR_PROFILE });\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n\r\n      dispatch(setAlert(\"Your account has been deleted permanently\"));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}