{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\illus\\\\PycharmProjects\\\\DevConnector-Django\\\\frontend\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleLike, deletePost } from \"../../actions/post\";\n\nconst PostItem = ({\n  post,\n  showActions\n}) => {\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  return React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/profile/${post.user}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"round-img\",\n    src: post.avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, post.name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, post.text), React.createElement(\"p\", {\n    className: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Posted on \", React.createElement(Moment, {\n    format: \"DD/MM/YYYY\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, post.date)), showActions && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    onClick: e => {\n      dispatch(toggleLike(post.id));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), post.likes.length > 0 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \" \", post.likes.length)), React.createElement(Link, {\n    to: `/posts/${post.id}`,\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Discussion\", \" \", post.post_comments.length > 0 && React.createElement(\"span\", {\n    className: \"comment-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, post.post_comments.length)), !auth.loading && auth.user.id === post.user && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: () => dispatch(deletePost(post.id)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })))));\n};\n\nPostItem.defaultProps = {\n  showActions: true\n};\nexport default PostItem;","map":{"version":3,"sources":["C:/Users/illus/PycharmProjects/DevConnector-Django/frontend/src/components/posts/PostItem.js"],"names":["React","Fragment","Link","Moment","useSelector","useDispatch","toggleLike","deletePost","PostItem","post","showActions","dispatch","auth","state","user","avatar","name","text","date","e","id","likes","length","post_comments","loading","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,oBAAvC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA2B;AAC1C,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,YAAWH,IAAI,CAACK,IAAK,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEL,IAAI,CAACM,MAArC;AAA6C,IAAA,GAAG,EAAC,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,IAAI,CAACO,IAAV,CAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBP,IAAI,CAACQ,IAA1B,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACY,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BR,IAAI,CAACS,IAAlC,CADZ,CAFF,EAKGR,WAAW,IACV,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,eAFZ;AAGE,IAAA,OAAO,EAAES,CAAC,IAAI;AACZR,MAAAA,QAAQ,CAACL,UAAU,CAACG,IAAI,CAACW,EAAN,CAAX,CAAR;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQGX,IAAI,CAACY,KAAL,CAAWC,MAAX,GAAoB,CAApB,IAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQb,IAAI,CAACY,KAAL,CAAWC,MAAnB,CAR5B,CADF,EAYE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,UAASb,IAAI,CAACW,EAAG,EAA5B;AAA+B,IAAA,SAAS,EAAC,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACa,GADb,EAEGX,IAAI,CAACc,aAAL,CAAmBD,MAAnB,GAA4B,CAA5B,IACC;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,IAAI,CAACc,aAAL,CAAmBD,MADtB,CAHJ,CAZF,EAoBG,CAACV,IAAI,CAACY,OAAN,IAAiBZ,IAAI,CAACE,IAAL,CAAUM,EAAV,KAAiBX,IAAI,CAACK,IAAvC,IACC;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAGE,IAAA,OAAO,EAAE,MAAMH,QAAQ,CAACJ,UAAU,CAACE,IAAI,CAACW,EAAN,CAAX,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CArBJ,CANJ,CAPF,CADF;AAgDD,CArDD;;AAuDAZ,QAAQ,CAACiB,YAAT,GAAwB;AACtBf,EAAAA,WAAW,EAAE;AADS,CAAxB;AAIA,eAAeF,QAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toggleLike, deletePost } from \"../../actions/post\";\r\n\r\nconst PostItem = ({ post, showActions }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  return (\r\n    <div className=\"post bg-white p-1 my-1\">\r\n      <div>\r\n        <Link to={`/profile/${post.user}`}>\r\n          <img className=\"round-img\" src={post.avatar} alt=\"\" />\r\n          <h4>{post.name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p className=\"my-1\">{post.text}</p>\r\n        <p className=\"post-date\">\r\n          Posted on <Moment format=\"DD/MM/YYYY\">{post.date}</Moment>\r\n        </p>\r\n        {showActions && (\r\n          <Fragment>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light\"\r\n              onClick={e => {\r\n                dispatch(toggleLike(post.id));\r\n              }}\r\n            >\r\n              <i className=\"fas fa-thumbs-up\"></i>\r\n              {post.likes.length > 0 && <span> {post.likes.length}</span>}\r\n            </button>\r\n\r\n            <Link to={`/posts/${post.id}`} className=\"btn btn-primary\">\r\n              Discussion{\" \"}\r\n              {post.post_comments.length > 0 && (\r\n                <span className=\"comment-count\">\r\n                  {post.post_comments.length}\r\n                </span>\r\n              )}\r\n            </Link>\r\n            {!auth.loading && auth.user.id === post.user && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                onClick={() => dispatch(deletePost(post.id))}\r\n              >\r\n                <i className=\"fas fa-times\"></i>\r\n              </button>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n};\r\n\r\nexport default PostItem;\r\n"]},"metadata":{},"sourceType":"module"}