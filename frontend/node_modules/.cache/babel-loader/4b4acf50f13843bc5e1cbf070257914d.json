{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\illus\\\\WebstormProjects\\\\ItsAmazingNetwork\\\\frontend\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const auth = useSelector(state => state.auth);\n  const {\n    loading,\n    isAuthenticated\n  } = auth;\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isAuthenticated && !loading ? React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }) : React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/illus/WebstormProjects/ItsAmazingNetwork/frontend/src/components/routing/PrivateRoute.js"],"names":["React","useSelector","Route","Redirect","PrivateRoute","component","Component","rest","auth","state","loading","isAuthenticated","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D,QAAMC,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA+BH,IAArC;AAEA,SACE,oBAAC,KAAD,oBACMD,IADN;AAEE,IAAA,MAAM,EAAEK,KAAK,IACX,CAACD,eAAD,IAAoB,CAACD,OAArB,GACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAGE,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD,CAhBD;;AAkBA,eAAeR,YAAf","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const auth = useSelector(state => state.auth);\r\n  const { loading, isAuthenticated } = auth;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        !isAuthenticated && !loading ? (\r\n          <Redirect to=\"/login\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}