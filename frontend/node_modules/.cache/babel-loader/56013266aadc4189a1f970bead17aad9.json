{"ast":null,"code":"import React,{Fragment,useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import Spinner from\"../layout/Spinner\";import ProfileItem from\"./ProfileItem\";import{getProfiles}from\"../../actions/profile\";var Profiles=function Profiles(){var _useSelector=useSelector(function(state){return state.profile;}),profiles=_useSelector.profiles,loading=_useSelector.loading;var dispatch=useDispatch();useEffect(function(){dispatch(getProfiles());},[dispatch]);return React.createElement(Fragment,null,loading?React.createElement(Spinner,null):React.createElement(Fragment,null,React.createElement(\"h1\",{className:\"large text-primary\"},\"Developers\"),React.createElement(\"p\",{className:\"lead\"},React.createElement(\"i\",{className:\"fab fa-connectdevelop\"}),\"Browse and connect with developers\"),React.createElement(\"div\",{className:\"profiles\"},profiles.length>0?profiles.map(function(profile){return React.createElement(ProfileItem,{key:profile.id,profile:profile});}):React.createElement(\"h4\",null,\"No profiles found...\"))));};export default Profiles;","map":{"version":3,"sources":["C:/Users/illus/WebstormProjects/ItsAmazingNetwork/frontend/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","useSelector","useDispatch","Spinner","ProfileItem","getProfiles","Profiles","state","profile","profiles","loading","dispatch","length","map","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAASC,WAAT,KAA4B,uBAA5B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,kBACSL,WAAW,CAAC,SAAAM,KAAK,QAAIA,CAAAA,KAAK,CAACC,OAAV,EAAN,CADpB,CACbC,QADa,cACbA,QADa,CACHC,OADG,cACHA,OADG,CAErB,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEAF,SAAS,CAAC,UAAM,CACdW,QAAQ,CAACN,WAAW,EAAZ,CAAR,CACD,CAFQ,CAEN,CAACM,QAAD,CAFM,CAAT,CAIA,MACE,qBAAC,QAAD,MACGD,OAAO,CACN,oBAAC,OAAD,MADM,CAGN,oBAAC,QAAD,MACE,0BAAI,SAAS,CAAC,oBAAd,eADF,CAEE,yBAAG,SAAS,CAAC,MAAb,EACE,yBAAG,SAAS,CAAC,uBAAb,EADF,sCAFF,CAME,2BAAK,SAAS,CAAC,UAAf,EACGD,QAAQ,CAACG,MAAT,CAAkB,CAAlB,CACCH,QAAQ,CAACI,GAAT,CAAa,SAAAL,OAAO,QAClB,qBAAC,WAAD,EAAa,GAAG,CAAEA,OAAO,CAACM,EAA1B,CAA8B,OAAO,CAAEN,OAAvC,EADkB,EAApB,CADD,CAKC,qDANJ,CANF,CAJJ,CADF,CAwBD,CAhCD,CAkCA,cAAeF,CAAAA,QAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport { getProfiles } from \"../../actions/profile\";\r\n\r\nconst Profiles = () => {\r\n  const { profiles, loading } = useSelector(state => state.profile);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getProfiles());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className=\"large text-primary\">Developers</h1>\r\n          <p className=\"lead\">\r\n            <i className=\"fab fa-connectdevelop\"></i>Browse and connect with\r\n            developers\r\n          </p>\r\n          <div className=\"profiles\">\r\n            {profiles.length > 0 ? (\r\n              profiles.map(profile => (\r\n                <ProfileItem key={profile.id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Profiles;\r\n"]},"metadata":{},"sourceType":"module"}